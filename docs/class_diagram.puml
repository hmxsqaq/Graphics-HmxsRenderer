@startuml

!theme toy
skinparam defaultFontName "LXGW WenKai Screen"

package platform {
    package win32 {
        class Win32Wnd {
            - data...
            ----
            + OpenWnd(width, height)
            + PushBuffer(buffer)
            + PushText(text)
            + UpdateWnd()
            + CloseWnd()
            ..
            {static} + HandleMsg()
            ..
            + SetTextFont(...)
            + SetTextColorRef(...)
            + SetTextOffset(...)
            + RegisterKeyCallback(callback)
            + RegisterMouseCallback(callback)
            + RegisterScrollCallback(callback)
            + SetUserData(data)
            + GetUserData() : data
        }
    }
}

package core {
    package maths  {
        class Vector <T, N> {
            + data : array<T,N>
            + OperationFunction()...
        }

        class Matrix <T, ROW, COL> {
            + data : array<Vector<T,COL>,ROW>
            + OperationFunction()...
        }

        class OtherFunctions {
            + Interpolate(...)...
        }
    }

    package utility {
        class Log <<singleton>> {
            - Level log_level_
            - ofstream log_file_
            --
            + LogMessage(level, message)
            ..
            + SetLogLevel(level)
            + SetLogFile(filename, mode)
            ..
            + {static} Log& Instance()
            - {static} GetCurrentTimestamp() : string
        }

        enum Level {
            LOG_ERROR
            LOG_WARNING
            LOG_INFO
            LOG_DEBUG
        }

        Log o-- Level

        class FrameTimer {
            - data...
            --
            + Tick()
            + fps() : double
        }
    }

    enum ColorType {
        GRAYSCALE = 1
        RGB = 3
        RGBA = 4
    }

    class ColorBuffer {
        - width_ : size_t
        - height_ : size_t
        - bpp_ : uint8_t
        - data_ : uint8_t[]
        --
        + SetPixel(...)
        + GetPixel(..) : Color
        + FlipVertically()
        + FlipHorizontally()
    }

    class DepthBuffer {
        - width_ : size_t
        - height_ : size_t
        - data_ : float[]
        --
        + SetDepth(...)
        + GetDepth(...) : float
    }

    class FrameBuffer {
        + color_buffer
        + depth_buffer
        --
        + Clear(...)
    }

    FrameBuffer o-- ColorBuffer
    FrameBuffer o-- DepthBuffer

    class Color {
        + r : uint8_t
        + g : uint8_t
        + b : uint8_t
        + a : uint8_t
        --
        + operator+(...)
        + operator*(...)
        + operator/(...)
    }


}

@enduml